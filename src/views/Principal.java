/*
 * Las posiciones de la variable cay son: 0 id de los cursos, 1 el curso, 2 id
 * de la asignatura, 3 la asignatura, 4 id del año escolar, 5 año escolar......
 *
*/

package views;

import controllers.singletons.Singleton_Controllers;
import controllers.singletons.Singleton_Interfaces;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.font.TextAttribute;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.time.LocalDate;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import main.Atajos;
import main.Start;

/**
 * @author Work
 */

public class Principal extends javax.swing.JFrame{
    private String[] cay;
    private String fecha;
    private JLabel JLInforme;
    private Atajos atajos;
    
    private Singleton_Interfaces interfaces;
    private Singleton_Controllers controladores;
        
    public Principal() {
        initComponents();
        //initOtherComponents();
        this.setSize(new Dimension(760, 370));
        this.setIconImage(getIconImage());
        this.setTitle("Gestor de Calificaciones || BETA 0.3");
        this.setLocationRelativeTo(null);
        //focus();
        
        panel_izquierdo.setPreferredSize(new Dimension(168, this.getY()));
        scroll_left_tabla.getViewport().setBackground(panel_main.getBackground());
        panel_izquierdo.setOpaque(false);
        scroll_tabla_derecha.setVisible(false);
        cay = new String[6];
        eventoJMIErrores();
        JMSoporte.add(JMIErrores);
        //JMIErrores.setVisible(false);
        
        JMIAddAlumn.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_E, InputEvent.CTRL_DOWN_MASK ));
        JMIAsistencia.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.CTRL_DOWN_MASK | 
                                                            InputEvent.SHIFT_DOWN_MASK));
        JMICompetencia.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_DOWN_MASK | 
                                                                InputEvent.SHIFT_DOWN_MASK));
        JMIIndicadorLogro.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, InputEvent.CTRL_DOWN_MASK ));
        JMIRPersonal.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, InputEvent.CTRL_DOWN_MASK ));
        JMIAsignatura.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.CTRL_DOWN_MASK | 
                                                            InputEvent.ALT_DOWN_MASK ));
        JMICompetencia.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.SHIFT_DOWN_MASK | 
                                                             InputEvent.ALT_DOWN_MASK ));
        JMICurso.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_DOWN_MASK | 
                                                            InputEvent.ALT_DOWN_MASK ));
        JMIIndicador.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, InputEvent.CTRL_DOWN_MASK | 
                                                                            InputEvent.SHIFT_DOWN_MASK));
        JMITema.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_T, InputEvent.CTRL_DOWN_MASK ));
        JMIUnidad.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_U, InputEvent.CTRL_DOWN_MASK ));
        JMIActualizar.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, InputEvent.CTRL_DOWN_MASK ));
        JMIErrores.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F2, InputEvent.CTRL_DOWN_MASK ));
        Start.setConteo(Start.getConteo()+1.0f);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        panel_main = new javax.swing.JPanel();
        panel_izquierdo = new javax.swing.JPanel();
        scroll_left_tabla = new javax.swing.JScrollPane();
        Tabla_izquierda = new javax.swing.JTable();
        panel_derecho = new javax.swing.JPanel();
        panel_derecho_superior = new javax.swing.JPanel();
        JComboB = new javax.swing.JComboBox<>();
        JLCurso = new javax.swing.JLabel();
        JLAsignatura = new javax.swing.JLabel();
        JLYear_escolar = new javax.swing.JLabel();
        JLBack = new javax.swing.JLabel();
        panel_derecho_inferior = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        JLCopyRight = new javax.swing.JLabel();
        panel_right_tabla = new javax.swing.JPanel();
        scroll_tabla_derecha = new javax.swing.JScrollPane();
        Tabla_derecha = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        JMArchivos = new javax.swing.JMenu();
        JMExportar = new javax.swing.JMenu();
        JMImportar = new javax.swing.JMenu();
        JMExcel = new javax.swing.JMenu();
        JMIExcelAlumnos = new javax.swing.JMenuItem();
        JMAdd = new javax.swing.JMenu();
        JMIAddAlumn = new javax.swing.JMenuItem();
        JMIAddAlumnIndicador = new javax.swing.JMenuItem();
        JMIAsistencia = new javax.swing.JMenuItem();
        JMIAddCompetencia = new javax.swing.JMenuItem();
        JMIIndicadorLogro = new javax.swing.JMenuItem();
        JMIRPersonal = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        JMIAsignatura = new javax.swing.JMenuItem();
        JMICompetencia = new javax.swing.JMenuItem();
        JMICurso = new javax.swing.JMenuItem();
        JMIIndicador = new javax.swing.JMenuItem();
        JMITema = new javax.swing.JMenuItem();
        JMIUnidad = new javax.swing.JMenuItem();
        JMSoporte = new javax.swing.JMenu();
        JMIActualizar = new javax.swing.JMenuItem();
        JMIErrores = new javax.swing.JMenuItem();
        JMVista = new javax.swing.JMenu();
        JMVistaTabla = new javax.swing.JMenu();
        JMLineas = new javax.swing.JMenu();
        JMICHBHorizontal = new javax.swing.JCheckBoxMenuItem();
        JMICHBVertical = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_main.setBackground(new java.awt.Color(255, 255, 255));
        panel_main.setMinimumSize(new java.awt.Dimension(700, 400));
        panel_main.setLayout(new java.awt.BorderLayout());

        panel_izquierdo.setMaximumSize(new java.awt.Dimension(160, 2147483647));
        panel_izquierdo.setLayout(new java.awt.BorderLayout());

        Tabla_izquierda.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        Tabla_izquierda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Alumnos"},
                {"Asistencias"},
                {"Indicadores De Logro"},
                {"Notas"},
                {"Registros Personales"},
                {"Voletin"}
            },
            new String [] {
                "Secciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_izquierda.setAutoscrolls(false);
        Tabla_izquierda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tabla_izquierda.setMaximumSize(new java.awt.Dimension(107, 64));
        Tabla_izquierda.setOpaque(false);
        Tabla_izquierda.setRowHeight(25);
        scroll_left_tabla.setViewportView(Tabla_izquierda);

        panel_izquierdo.add(scroll_left_tabla, java.awt.BorderLayout.CENTER);

        panel_main.add(panel_izquierdo, java.awt.BorderLayout.WEST);

        panel_derecho.setLayout(new java.awt.BorderLayout());

        panel_derecho_superior.setLayout(new java.awt.GridBagLayout());

        JComboB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fecha:" }));
        JComboB.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 48);
        panel_derecho_superior.add(JComboB, gridBagConstraints);

        JLCurso.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        JLCurso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLCurso.setText("Curso:...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        panel_derecho_superior.add(JLCurso, gridBagConstraints);

        JLAsignatura.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        JLAsignatura.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLAsignatura.setText("Asignatura:...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, -10, 0, 0);
        panel_derecho_superior.add(JLAsignatura, gridBagConstraints);

        JLYear_escolar.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        JLYear_escolar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLYear_escolar.setText("Año:...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 45;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 26);
        panel_derecho_superior.add(JLYear_escolar, gridBagConstraints);

        JLBack.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        JLBack.setText("Seleccionar otro curso");
        JLBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JLBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLBackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JLBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JLBackMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 80.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        panel_derecho_superior.add(JLBack, gridBagConstraints);

        panel_derecho.add(panel_derecho_superior, java.awt.BorderLayout.PAGE_START);

        panel_derecho_inferior.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("                ");
        panel_derecho_inferior.add(jLabel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("                ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 436;
        gridBagConstraints.ipady = 2;
        jPanel2.add(jLabel3, gridBagConstraints);

        panel_derecho_inferior.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jLabel4.setText("                ");
        panel_derecho_inferior.add(jLabel4, java.awt.BorderLayout.LINE_END);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        JLCopyRight.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        JLCopyRight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLCopyRight.setText("DS Team derechos reservados");
        JLCopyRight.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 28;
        gridBagConstraints.weightx = 100.0;
        jPanel3.add(JLCopyRight, gridBagConstraints);

        panel_derecho_inferior.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        panel_right_tabla.setLayout(new java.awt.GridLayout(1, 0));

        Tabla_derecha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tabla_derecha.getTableHeader().setReorderingAllowed(false);
        scroll_tabla_derecha.setViewportView(Tabla_derecha);

        panel_right_tabla.add(scroll_tabla_derecha);

        panel_derecho_inferior.add(panel_right_tabla, java.awt.BorderLayout.CENTER);

        panel_derecho.add(panel_derecho_inferior, java.awt.BorderLayout.CENTER);

        panel_main.add(panel_derecho, java.awt.BorderLayout.CENTER);

        jScrollPane1.setViewportView(panel_main);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        JMArchivos.setText("Archivos");

        JMExportar.setText("Exportar");
        JMExportar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMExportarMouseClicked(evt);
            }
        });
        JMArchivos.add(JMExportar);

        JMImportar.setText("Importar");

        JMExcel.setText("Excel");

        JMIExcelAlumnos.setText("Alumnos");
        JMExcel.add(JMIExcelAlumnos);

        JMImportar.add(JMExcel);

        JMArchivos.add(JMImportar);

        jMenuBar1.add(JMArchivos);

        JMAdd.setText("Agregar");

        JMIAddAlumn.setText("Alumno");
        JMIAddAlumn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JMIAddAlumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIAddAlumnActionPerformed(evt);
            }
        });
        JMAdd.add(JMIAddAlumn);

        JMIAddAlumnIndicador.setText("Alumnos al Indicador");
        JMAdd.add(JMIAddAlumnIndicador);

        JMIAsistencia.setText("Asistencia");
        JMIAsistencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JMAdd.add(JMIAsistencia);

        JMIAddCompetencia.setText("Competencia");
        JMAdd.add(JMIAddCompetencia);

        JMIIndicadorLogro.setText("Indicador de Logro");
        JMIIndicadorLogro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JMIIndicadorLogro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIIndicadorLogroActionPerformed(evt);
            }
        });
        JMAdd.add(JMIIndicadorLogro);

        JMIRPersonal.setText("Registro Personal");
        JMIRPersonal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JMIRPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIRPersonalActionPerformed(evt);
            }
        });
        JMAdd.add(JMIRPersonal);

        jMenuBar1.add(JMAdd);

        jMenu2.setText("Editar");

        JMIAsignatura.setText("Asignatura");
        jMenu2.add(JMIAsignatura);

        JMICompetencia.setText("Competencia");
        jMenu2.add(JMICompetencia);

        JMICurso.setText("Curso");
        jMenu2.add(JMICurso);

        JMIIndicador.setText("Indicador");
        jMenu2.add(JMIIndicador);

        JMITema.setText("Tema");
        jMenu2.add(JMITema);

        JMIUnidad.setText("Unidad");
        jMenu2.add(JMIUnidad);

        jMenuBar1.add(jMenu2);

        JMSoporte.setText("Soporte");

        JMIActualizar.setText("Actualizar");
        JMSoporte.add(JMIActualizar);

        JMIErrores.setText("Registro De Errores");
        JMSoporte.add(JMIErrores);

        jMenuBar1.add(JMSoporte);

        JMVista.setText("Vista");

        JMVistaTabla.setText("Tablas");

        JMLineas.setText("Lineas");

        JMICHBHorizontal.setText("Horizontal");
        JMICHBHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICHBHorizontalActionPerformed(evt);
            }
        });
        JMLineas.add(JMICHBHorizontal);

        JMICHBVertical.setText("Vertical");
        JMICHBVertical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICHBVerticalActionPerformed(evt);
            }
        });
        JMLineas.add(JMICHBVertical);

        JMVistaTabla.add(JMLineas);

        JMVista.add(JMVistaTabla);

        jMenuBar1.add(JMVista);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initOtherComponents(){
        JLInforme = new JLabel("No se Encontron Datos Almacenados");
        panel_derecho_inferior.add(JLInforme, java.awt.BorderLayout.CENTER);
        JLInforme.setVisible(true);
    }
    
    private void JLBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLBackMouseEntered
        Font f = JLBack.getFont();
        Map atruuto = f.getAttributes();
        atruuto.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        JLBack.setFont(f.deriveFont(atruuto));
    }//GEN-LAST:event_JLBackMouseEntered

    private void JLBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLBackMouseExited
        Font f = JLBack.getFont();
        Map atriuto = f.getAttributes();
        atriuto.put(TextAttribute.UNDERLINE, -1);
        JLBack.setFont(f.deriveFont(atriuto));
    }//GEN-LAST:event_JLBackMouseExited

    private void JLBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLBackMouseClicked
        scroll_tabla_derecha.setVisible(false);
        JComboB.setSelectedIndex(0);
        interfaces = Singleton_Interfaces.getInstance();
        controladores = Singleton_Controllers.getInstance();
        Start.identificador = 0;
        controladores.add_select.cargador();
        interfaces.add_select.JLCurso.setText("Escribir Curso...");
        interfaces.add_select.JLCurso.setEnabled(true);
        interfaces.add_select.JTFCurso.setEditable(true);
        interfaces.add_select.JBAdd.setEnabled(true);
        interfaces.add_select.enabledComponents(true);
        this.dispose();
        interfaces.add_select.setVisible(true);
    }//GEN-LAST:event_JLBackMouseClicked

    private void JMIAddAlumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIAddAlumnActionPerformed
        interfaces = Singleton_Interfaces.getInstance();
        interfaces.add_alumno.setLocationRelativeTo(this);
        interfaces.add_alumno.JTFCurso.setText(cay[1]);
        interfaces.add_alumno.JTFAsignatura.setText(cay[3]);
        interfaces.add_alumno.JTFYearEscolar.setText(cay[5]);
        interfaces.add_alumno.setVisible(true);
    }//GEN-LAST:event_JMIAddAlumnActionPerformed

    private void JMIIndicadorLogroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIIndicadorLogroActionPerformed
        interfaces = Singleton_Interfaces.getInstance();
        interfaces.addIndicador_logro.JLIndicadorArea.setText(cay[1]+" -> "+cay[3]);
        interfaces.addIndicador_logro.resetComponents();
        interfaces.addIndicador_logro.setVisible(true);
    }//GEN-LAST:event_JMIIndicadorLogroActionPerformed

    private void JMIRPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIRPersonalActionPerformed
        interfaces = Singleton_Interfaces.getInstance();
        controladores = Singleton_Controllers.getInstance();
        Start.identificador = 10;
        controladores.principal.setSeccion(-1);
        interfaces.indicador_Logro.JComboBPerriodos.setEnabled(true);
        interfaces.indicador_Logro.JBAdd.setEnabled(false);
        interfaces.indicador_Logro.JBSelect.setEnabled(true);
        interfaces.indicador_Logro.JLIndicador.setText("Selecione su Indocador");
        interfaces.indicador_Logro.setVisible(true);
    }//GEN-LAST:event_JMIRPersonalActionPerformed

    private void JMICHBHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICHBHorizontalActionPerformed
        controladores = Singleton_Controllers.getInstance();
        controladores.principal.setLineas((byte)5);
    }//GEN-LAST:event_JMICHBHorizontalActionPerformed

    private void JMICHBVerticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICHBVerticalActionPerformed
        controladores = Singleton_Controllers.getInstance();
        controladores.principal.setLineas((byte)5);
    }//GEN-LAST:event_JMICHBVerticalActionPerformed

    private void JMExportarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMExportarMouseClicked
        JOptionPane.showMessageDialog(this, "Esta opción no esta disponible por el momento.", "Informe",
                                      JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_JMExportarMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> JComboB;
    public javax.swing.JLabel JLAsignatura;
    private javax.swing.JLabel JLBack;
    private javax.swing.JLabel JLCopyRight;
    public javax.swing.JLabel JLCurso;
    public javax.swing.JLabel JLYear_escolar;
    private javax.swing.JMenu JMAdd;
    private javax.swing.JMenu JMArchivos;
    private javax.swing.JMenu JMExcel;
    private javax.swing.JMenu JMExportar;
    public javax.swing.JMenuItem JMIActualizar;
    private javax.swing.JMenuItem JMIAddAlumn;
    public javax.swing.JMenuItem JMIAddAlumnIndicador;
    public javax.swing.JMenuItem JMIAddCompetencia;
    public javax.swing.JMenuItem JMIAsignatura;
    public javax.swing.JMenuItem JMIAsistencia;
    public javax.swing.JCheckBoxMenuItem JMICHBHorizontal;
    public javax.swing.JCheckBoxMenuItem JMICHBVertical;
    public javax.swing.JMenuItem JMICompetencia;
    public javax.swing.JMenuItem JMICurso;
    private javax.swing.JMenuItem JMIErrores;
    public javax.swing.JMenuItem JMIExcelAlumnos;
    public javax.swing.JMenuItem JMIIndicador;
    private javax.swing.JMenuItem JMIIndicadorLogro;
    private javax.swing.JMenuItem JMIRPersonal;
    public javax.swing.JMenuItem JMITema;
    public javax.swing.JMenuItem JMIUnidad;
    private javax.swing.JMenu JMImportar;
    private javax.swing.JMenu JMLineas;
    private javax.swing.JMenu JMSoporte;
    private javax.swing.JMenu JMVista;
    private javax.swing.JMenu JMVistaTabla;
    public javax.swing.JTable Tabla_derecha;
    public javax.swing.JTable Tabla_izquierda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel_derecho;
    private javax.swing.JPanel panel_derecho_inferior;
    private javax.swing.JPanel panel_derecho_superior;
    private javax.swing.JPanel panel_izquierdo;
    private javax.swing.JPanel panel_main;
    private javax.swing.JPanel panel_right_tabla;
    private javax.swing.JScrollPane scroll_left_tabla;
    public javax.swing.JScrollPane scroll_tabla_derecha;
    // End of variables declaration//GEN-END:variables

    private void eventoJMIErrores(){
        JMIErrores.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                interfaces = Singleton_Interfaces.getInstance();
                interfaces.registro_error.mostrarError();
                interfaces.registro_error.setVisible(true);
            }
        });
    }
    
    private void focus(){
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addPropertyChangeListener("focusOwner", 
                new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                System.out.println(evt.getNewValue());
                
            }
        });

    }
    
    public String[] getCay() {
        return cay;
    }
    
    public String getFecha(byte pase){
        if(pase == 0)   return LocalDate.now().toString();
        else return fecha;
    }
        
    @Override
    public Image getIconImage(){
        Image img = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("views/imagenes/myLogo.png"));
        return img;
    }
    
    public void initLabels(){
        JLYear_escolar.setText(cay[5]);
        JLCurso.setText(cay[1]);
        JLAsignatura.setText(cay[3]);
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        /*Image img = new ImageIcon(ClassLoader.getSystemResource("views/imagenes/fondoPrincipal.jpg")).getImage();
        g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), null);*/
        Graphics2D g2d = (Graphics2D)g;
        //g2d.setPaint(new GradientPaint(this.getWidth(),118,new Color(96,113,176),this.getWidth(),this.getHeight(),Color.WHITE));
        //g2d.fillRect(0, 0, this.getWidth(), this.getHeight());
    }
        
    public void resetCBB(){
        JComboB.removeAllItems();
        JComboB.addItem("Fecha:");
        
    }
    
    public void setCay(String[] cay) {
        this.cay = cay;
    }
    
    public void setFecha(String fecha){
        this.fecha = fecha;
    }
    
    public static void setPropiedades(String propiedad, String valor){
        InputStream in = null;
        FileOutputStream out = null;
        try {
            Properties pr = new Properties();
            final String caracter = System.getProperty("file.separator");
            File ruta = new File(System.getProperty("user.home")+caracter+"Documents"+caracter+
                    "gestor_alumnos_dataBase"+caracter+"config.properties");
            in = new FileInputStream(ruta);
            pr.load(in);
            out = new FileOutputStream(ruta);
            pr.setProperty(propiedad, valor);
            pr.store(out, "");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                in.close();
                out.close();
                
            } catch (IOException ex) {
                Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
}
